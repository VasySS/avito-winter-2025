services:
  avito-shop-service:
    build: .
    container_name: avito-shop-service
    ports:
      - "8080:8080"
    environment:
      # енвы подключения к БД
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=password
      - DATABASE_NAME=shop
      - DATABASE_HOST=db
      # порт сервиса
      - SERVER_PORT=8080
      - JWT_SECRET=verysecret
      - ACCESS_TOKEN_TTL=1h
    depends_on:
      postgres-migrations:
        condition: service_completed_successfully
    networks:
      - internal

  db:
    image: postgres:17
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: shop
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U postgres -d shop'"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - internal
  postgres-migrations:
    container_name: postgres-migrations
    build:
      context: ./migrations
    environment:
      GOOSE_DRIVER: postgres
      GOOSE_DBSTRING: postgres://postgres:password@db:5432/shop?sslmode=disable
    command: ["up"]
    depends_on:
      db:
        condition: service_healthy
    restart: "no"
    networks:
      - internal

networks:
  internal:
